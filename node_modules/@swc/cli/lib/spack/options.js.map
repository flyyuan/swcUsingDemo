{"version":3,"sources":["../../src/spack/options.ts"],"sourcesContent":["import { version as swcCoreVersion } from \"@swc/core\";\nimport { BundleOptions, compileBundleOptions } from \"@swc/core/spack\";\nimport commander from \"commander\";\nimport * as path from 'path';\n\nconst pkg = require(\"../../package.json\");\n\nexport interface SpackCliOptions {\n    debug: boolean\n}\n\ncommander.option(\"--config [path]\", \"Path to a spack.config.js file to use.\");\n// TODO: allow using ts. See: https://github.com/swc-project/swc/issues/841\n\ncommander.option(\"--mode <development | production | none>\", \"Mode to use\");\ncommander.option(\"--target [browser | node]\", \"Target runtime environment\");\n\ncommander.option(\n    '--context [path]', `The base directory (absolute path!) for resolving the 'entry'`\n+ ` option. If 'output.pathinfo' is set, the included pathinfo is shortened to this directory`,\n    'The current directory'\n);\n\ncommander.option('--entry [list]', \"List of entries\", collect);\n\n// commander.option('-W --watch', `Enter watch mode, which rebuilds on file change.`)\n\n\ncommander.option('--debug', `Switch loaders to debug mode`)\n// commander.option('--devtool', `Select a developer tool to enhance debugging.`)\n\n// -d           shortcut for --debug --devtool eval-cheap-module-source-map\n//              --output-pathinfo                                          [여부]\n// -p           shortcut for --optimize-minimize --define\n//              process.env.NODE_ENV=\"production\"                          [여부]\n\n// Module options:\n// --module-bind       Bind an extension to a loader                     [문자열]\n// --module-bind-post  Bind an extension to a post loader                [문자열]\n// --module-bind-pre   Bind an extension to a pre loader                 [문자열]\n\n// Output options:\ncommander.option('-o --output', `The output path and file for compilation assets`);\ncommander.option('--output-path', `The output directory as **absolute path**`);\n//   --output-filename             Specifies the name of each output file on disk.\n//                                 You must **not** specify an absolute path here!\n//                                 The `output.path` option determines the location\n//                                 on disk the files are written to, filename is\n//                                 used solely for naming the individual files.\n//                                                    [string] [default: [name].js]\n//   --output-chunk-filename       The filename of non-entry chunks as relative\n//                                 path inside the `output.path` directory.\n//        [string] [default: filename with [id] instead of [name] or [id] prefixed]\n//   --output-source-map-filename  The filename of the SourceMaps for the\n//                                 JavaScript files. They are inside the\n//                                 `output.path` directory.                [string]\n//   --output-public-path          The `publicPath` specifies the public URL\n//                                 address of the output files when referenced in a\n//                                 browser.                                [string]\n//   --output-jsonp-function       The JSONP function used by webpack for async\n//                                 loading of chunks.                      [string]\n//   --output-pathinfo             Include comments with information about the\n//                                 modules.                               [boolean]\n//   --output-library              Expose the exports of the entry point as library\n//                                                                          [array]\n//   --output-library-target       Type of library\n//          [string] [choices: \"var\", \"assign\", \"this\", \"window\", \"self\", \"global\",\n//       \"commonjs\", \"commonjs2\", \"commonjs-module\", \"amd\", \"umd\", \"umd2\", \"jsonp\"]\n\n// Advanced options:\n//   --records-input-path       Store compiler state to a json file.       [string]\n//   --records-output-path      Load compiler state from a json file.      [string]\n//   --records-path             Store/Load compiler state from/to a json file. This\n//                              will result in persistent ids of modules and\n//                              chunks. An absolute path is expected. `recordsPath`\n//                              is used for `recordsInputPath` and\n//                              `recordsOutputPath` if they left undefined.[string]\n//   --define                   Define any free var in the bundle          [string]\n//   --target                   Environment to build for                   [string]\n//   --cache                    Cache generated modules and chunks to improve\n//                              performance for multiple incremental builds.\n//                       [boolean] [default: It's enabled by default when watching]\n//   --watch-stdin, --stdin     Stop watching when stdin stream has ended [boolean]\n//   --watch-aggregate-timeout  Delay the rebuilt after the first change. Value is\n//                              a time in ms.                              [number]\n//   --watch-poll               Enable polling mode for watching           [string]\n//   --hot                      Enables Hot Module Replacement            [boolean]\n//   --prefetch                 Prefetch this request (Example: --prefetch\n//                              ./file.js)                                 [string]\n//   --provide                  Provide these modules as free vars in all modules\n//                              (Example: --provide jQuery=jquery)         [string]\n//   --labeled-modules          Enables labeled modules                   [boolean]\n//   --plugin                   Load this plugin                           [string]\n//   --bail                     Report the first error as a hard error instead of\n//                              tolerating it.            [boolean] [default: null]\n//   --profile                  Capture timing information for each module.\n//                                                        [boolean] [default: null]\n\n// Resolving options:\n//   --resolve-alias         Redirect module requests                      [string]\n//   --resolve-extensions    Redirect module requests                       [array]\n//   --resolve-loader-alias  Setup a loader alias for resolving            [string]\n\n// Optimizing options:\n//   --optimize-max-chunks      Try to keep the chunk count below a limit\n//   --optimize-min-chunk-size  Minimal size for the created chunk\n//   --optimize-minimize        Enable minimizing the output. Uses\n//                              optimization.minimizer.                   [boolean]\n\n// Stats options:\n//   --color, --colors               Force colors on the console\n//                                            [boolean] [default: (supports-color)]\n//   --no-color, --no-colors         Force no colors on the console       [boolean]\n//   --sort-modules-by               Sorts the modules list by property in module\n//                                                                         [string]\n//   --sort-chunks-by                Sorts the chunks list by property in chunk\n//                                                                         [string]\n//   --sort-assets-by                Sorts the assets list by property in asset\n//                                                                         [string]\n//   --hide-modules                  Hides info about modules             [boolean]\n//   --display-exclude               Exclude modules in the output         [string]\n//   --display-modules               Display even excluded modules in the output\n//                                                                        [boolean]\n//   --display-max-modules           Sets the maximum number of visible modules in\n//                                   output                                [number]\n//   --display-chunks                Display chunks in the output         [boolean]\n//   --display-entrypoints           Display entry points in the output   [boolean]\n//   --display-origins               Display origins of chunks in the output\n//                                                                        [boolean]\n//   --display-cached                Display also cached modules in the output\n//                                                                        [boolean]\n//   --display-cached-assets         Display also cached assets in the output\n//                                                                        [boolean]\n//   --display-reasons               Display reasons about module inclusion in the\n//                                   output                               [boolean]\n//   --display-depth                 Display distance from entry point for each\n//                                   module                               [boolean]\n//   --display-used-exports          Display information about used exports in\n//                                   modules (Tree Shaking)               [boolean]\n//   --display-provided-exports      Display information about exports provided\n//                                   from modules                         [boolean]\n//   --display-optimization-bailout  Display information about why optimization\n//                                   bailed out for modules               [boolean]\n//   --display-error-details         Display details about errors         [boolean]\n//   --display                       Select display preset\n//               [string] [choices: \"\", \"verbose\", \"detailed\", \"normal\", \"minimal\",\n//                                                           \"errors-only\", \"none\"]\n//   --verbose                       Show more details                    [boolean]\n//   --info-verbosity                Controls the output of lifecycle messaging\n//                                   e.g. Started watching files...\n//                  [string] [choices: \"none\", \"info\", \"verbose\"] [default: \"info\"]\n//   --build-delimiter               Display custom text after build output[string]\n\n// Options:\n//   --silent       Prevent output from being displayed in stdout         [boolean]\n//   --json, -j     Prints the result as JSON.                            [boolean]\n\ncommander.version(\n    `@swc/cli: ${pkg.version}\n@swc/core: ${swcCoreVersion}`\n);\n\nexport default async function parseSpackArgs(args: string[]): Promise<{\n    cliOptions: SpackCliOptions,\n    spackOptions: BundleOptions,\n}> {\n    //\n    const cmd = commander.parse(args);\n    const opts = cmd.opts();\n\n    const cliOptions: SpackCliOptions = {\n        // watch: !!opts.watch,\n        debug: !!opts.debug,\n    };\n\n    const configOpts: BundleOptions = await compileBundleOptions(opts.config ?? path.resolve('spack.config.js')) as any;\n    if (opts.entry) {\n        configOpts.entry = opts.entry;\n    }\n    if (opts.mode) {\n        configOpts.mode = opts.mode;\n    }\n    if (opts.target) {\n        configOpts.target = opts.target;\n    }\n    if (!configOpts.output) {\n        configOpts.output = {} as any;\n    }\n    if (!configOpts.output.path) {\n        configOpts.output.path = opts.outputPath ?? '[name].js';\n    }\n    if (!configOpts.output.name) {\n        configOpts.output.name = opts.output ?? '[name].js';\n    }\n    // if (!configOpts.output.name) {\n    //     configOpts.output.path = opts.outputPath;\n    // }\n\n    return {\n        cliOptions,\n        spackOptions: {\n            ...configOpts,\n        },\n    }\n}\n\n\nfunction collect(value: any, previousValue: any): Array<string> {\n    // If the user passed the option with no value, like \"babel file.js --presets\", do nothing.\n    if (typeof value !== \"string\") return previousValue;\n\n    const values = value.split(\",\");\n\n    return previousValue ? previousValue.concat(values) : values;\n}\n"],"names":[],"mappings":"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"}