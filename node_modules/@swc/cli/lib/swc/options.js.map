{"version":3,"sources":["../../src/swc/options.ts"],"sourcesContent":["import commander from \"commander\";\nimport { DEFAULT_EXTENSIONS, version as swcCoreVersion } from \"@swc/core\";\nimport type { Options } from \"@swc/core\";\n\nconst pkg = require(\"../../package.json\");\n\nlet program: commander.Command\n\nexport const initProgram = () => {\n  program = new commander.Command()\n\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV === 'test') {\n    program.exitOverride();\n  }\n\n\n  program.option(\n    \"-f, --filename [filename]\",\n    \"filename to use when reading from stdin - this will be used in source-maps, errors etc\"\n  );\n\n  program.option(\n    \"--config-file [path]\",\n    \"Path to a .swcrc file to use\"\n  );\n\n  program.option(\n    \"--env-name [name]\",\n    \"The name of the 'env' to use when loading configs and plugins. \" +\n    \"Defaults to the value of SWC_ENV, or else NODE_ENV, or else 'development'.\"\n  );\n\n  program.option(\n    \"--no-swcrc\",\n    \"Whether or not to look up .swcrc files\"\n  );\n\n  program.option(\n    \"--delete-dir-on-start\",\n    \"Whether or not delete output directory on start\"\n  );\n\n  program.option(\n    \"--ignore [list]\",\n    \"list of glob paths to **not** compile\",\n    collect\n  );\n\n  program.option(\n    \"--only [list]\",\n    \"list of glob paths to **only** compile\",\n    collect\n  );\n\n  program.option(\n    \"-w, --watch\",\n    \"Recompile files on changes\"\n  );\n\n  program.option(\n    \"-q, --quiet\",\n    \"Suppress compilation output\"\n  );\n\n  program.option(\n    \"-s, --source-maps [true|false|inline|both]\",\n    \"generate source maps\",\n    unstringify\n  );\n\n  program.option(\n    \"--source-map-target [string]\",\n    \"set `file` on returned source map\"\n  );\n\n  program.option(\n    \"--source-file-name [string]\",\n    \"set `sources[0]` on returned source map\"\n  );\n\n  program.option(\n    \"--source-root [filename]\",\n    \"the root from which all sources are relative\"\n  );\n\n  program.option(\n    \"-o, --out-file [out]\",\n    \"Compile all input files into a single file\"\n  );\n\n  program.option(\n    \"-d, --out-dir [out]\",\n    \"Compile an input directory of modules into an output directory\"\n  );\n\n  program.option(\n    \"-D, --copy-files\",\n    \"When compiling a directory copy over non-compilable files\"\n  );\n  program.option(\n    \"--include-dotfiles\",\n    \"Include dotfiles when compiling and copying non-compilable files\"\n  );\n\n  program.option(\n    \"-C, --config <config>\",\n    \"Override a config from .swcrc file. e.g. -C module.type=amd -C module.moduleId=hello\",\n    collect\n  );\n\n  program.option(\n    \"--sync\",\n    \"Invoke swc synchronously. Useful for debugging.\",\n    collect\n  );\n\n  program.option(\n    \"--log-watch-compilation\",\n    \"Log a message when a watched file is successfully compiled\",\n    true\n  );\n\n  program.option(\n    \"--extensions [list]\",\n    \"Use specific extensions\",\n    collect\n  );\n\n  program.version(`\n@swc/cli: ${pkg.version}\n@swc/core: ${swcCoreVersion}\n`);\n\n  program.usage(\"[options] <files ...>\");\n}\n\nfunction unstringify(val: string): any {\n  try {\n    return JSON.parse(val);\n  } catch {\n    return val;\n  }\n}\n\nfunction collect(value: string, previousValue?: string[]): string[] | undefined {\n  // If the user passed the option with no value, like \"babel file.js --presets\", do nothing.\n  /* istanbul ignore next */\n  if (typeof value !== \"string\") return previousValue;\n\n  const values = value.split(\",\");\n\n  return previousValue ? previousValue.concat(values) : values;\n}\n\nexport interface CliOptions {\n  readonly outDir: string;\n  readonly outFile: string;\n  /**\n   * Invoke swc using transformSync. It's useful for debugging.\n   */\n  readonly sync: boolean;\n  readonly sourceMapTarget?: string;\n  readonly filename: string;\n  readonly filenames: string[];\n  readonly extensions: string[];\n  readonly watch: boolean;\n  readonly copyFiles: boolean;\n  readonly includeDotfiles: boolean;\n  readonly deleteDirOnStart: boolean;\n  readonly quiet: boolean;\n}\n\nexport default function parserArgs(args: string[]) {\n  program.parse(args);\n  const opts = program.opts();\n\n  const filenames = program.args;\n  const errors = [];\n\n  if (opts.outDir && !filenames.length) {\n    errors.push(\"--out-dir requires filenames\");\n  }\n\n  if (opts.outFile && opts.outDir) {\n    errors.push(\"--out-file and --out-dir cannot be used together\");\n  }\n\n  if (opts.watch) {\n    if (!opts.outFile && !opts.outDir) {\n      errors.push(\"--watch requires --out-file or --out-dir\");\n    }\n\n    if (!filenames.length) {\n      errors.push(\"--watch requires filenames\");\n    }\n  }\n\n  if (\n    !opts.outDir &&\n    filenames.length === 0 &&\n    typeof opts.filename !== \"string\" &&\n    opts.swcrc !== false\n  ) {\n    errors.push(\n      \"stdin compilation requires either -f/--filename [filename] or --no-swcrc\"\n    );\n  }\n\n  if (errors.length) {\n    console.error(\"swc:\");\n    for (const error of errors) {\n      console.error(\"  \" + error);\n    }\n    process.exit(2);\n  }\n\n  const swcOptions: Options = {\n    jsc: {\n      parser: undefined,\n      transform: {}\n    },\n    sourceFileName: opts.sourceFileName,\n    sourceRoot: opts.sourceRoot,\n    configFile: opts.configFile,\n    swcrc: opts.swcrc\n  };\n\n  if (opts.sourceMaps !== undefined) {\n    swcOptions.sourceMaps = opts.sourceMaps;\n  }\n\n  if (opts.config) {\n    for (const cfg of opts.config as string[]) {\n      const i = cfg.indexOf(\"=\");\n      let key: string;\n      let value: any;\n      if (i === -1) {\n        key = cfg;\n        value = true;\n      } else {\n        key = cfg.substring(0, i);\n        value = unstringify(cfg.substring(i + 1));\n      }\n      // https://github.com/swc-project/cli/issues/45\n      let options = swcOptions as { [key: string]: any }\n      const keyParts = key.split('.')\n      const lastIndex = keyParts.length - 1\n      for (const [index, keyPart] of keyParts.entries()) {\n        if (options[keyPart] === undefined && index !== lastIndex) {\n          options[keyPart] = {}\n        }\n        if (index === lastIndex) {\n          options[keyPart] = value\n        } else {\n          options = options[keyPart]\n        }\n      }\n    }\n  }\n\n  const cliOptions: CliOptions = {\n    outDir: opts.outDir,\n    outFile: opts.outFile,\n    filename: opts.filename,\n    filenames,\n    sync: !!opts.sync,\n    sourceMapTarget: opts.sourceMapTarget,\n    extensions: opts.extensions || DEFAULT_EXTENSIONS,\n    watch: !!opts.watch,\n    copyFiles: !!opts.copyFiles,\n    includeDotfiles: !!opts.includeDotfiles,\n    deleteDirOnStart: Boolean(opts.deleteDirOnStart),\n    quiet: !!opts.quiet,\n  };\n  return {\n    swcOptions,\n    cliOptions\n  };\n}\n"],"names":[],"mappings":";;;;kBA6KwB,UAAU;;AA7KZ,GAAW,CAAX,UAAW;AAC6B,GAAW,CAAX,KAAW;;;;;;AAGzE,KAAK,CAAC,GAAG,GAAG,OAAO,EAAC,kBAAoB;AAExC,GAAG,CAAC,OAAO;AAEJ,KAAK,CAAC,WAAW,OAAS,CAAC;IAChC,OAAO,GAAG,GAAG,CATO,UAAW,SASP,OAAO;IAE/B,EAA0B,AAA1B,sBAA0B,AAA1B,EAA0B,CAC1B,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,MAAK,IAAM,GAAE,CAAC;QACpC,OAAO,CAAC,YAAY;IACtB,CAAC;IAGD,OAAO,CAAC,MAAM,EACZ,yBAA2B,IAC3B,sFAAwF;IAG1F,OAAO,CAAC,MAAM,EACZ,oBAAsB,IACtB,4BAA8B;IAGhC,OAAO,CAAC,MAAM,EACZ,iBAAmB,IACnB,+DAAiE,KACjE,0EAA4E;IAG9E,OAAO,CAAC,MAAM,EACZ,UAAY,IACZ,sCAAwC;IAG1C,OAAO,CAAC,MAAM,EACZ,qBAAuB,IACvB,+CAAiD;IAGnD,OAAO,CAAC,MAAM,EACZ,eAAiB,IACjB,qCAAuC,GACvC,OAAO;IAGT,OAAO,CAAC,MAAM,EACZ,aAAe,IACf,sCAAwC,GACxC,OAAO;IAGT,OAAO,CAAC,MAAM,EACZ,WAAa,IACb,0BAA4B;IAG9B,OAAO,CAAC,MAAM,EACZ,WAAa,IACb,2BAA6B;IAG/B,OAAO,CAAC,MAAM,EACZ,0CAA4C,IAC5C,oBAAsB,GACtB,WAAW;IAGb,OAAO,CAAC,MAAM,EACZ,4BAA8B,IAC9B,iCAAmC;IAGrC,OAAO,CAAC,MAAM,EACZ,2BAA6B,IAC7B,uCAAyC;IAG3C,OAAO,CAAC,MAAM,EACZ,wBAA0B,IAC1B,4CAA8C;IAGhD,OAAO,CAAC,MAAM,EACZ,oBAAsB,IACtB,0CAA4C;IAG9C,OAAO,CAAC,MAAM,EACZ,mBAAqB,IACrB,8DAAgE;IAGlE,OAAO,CAAC,MAAM,EACZ,gBAAkB,IAClB,yDAA2D;IAE7D,OAAO,CAAC,MAAM,EACZ,kBAAoB,IACpB,gEAAkE;IAGpE,OAAO,CAAC,MAAM,EACZ,qBAAuB,IACvB,oFAAsF,GACtF,OAAO;IAGT,OAAO,CAAC,MAAM,EACZ,MAAQ,IACR,+CAAiD,GACjD,OAAO;IAGT,OAAO,CAAC,MAAM,EACZ,uBAAyB,IACzB,0DAA4D,GAC5D,IAAI;IAGN,OAAO,CAAC,MAAM,EACZ,mBAAqB,IACrB,uBAAyB,GACzB,OAAO;IAGT,OAAO,CAAC,OAAO,EAAE,WACT,EAAE,GAAG,CAAC,OAAO,CAAC,YACb,EAlImD,KAAW,SAkI7C,CAC5B;IAEE,OAAO,CAAC,KAAK,EAAC,qBAAuB;AACvC,CAAC;QA/HY,WAAW,GAAX,WAAW;SAiIf,WAAW,CAAC,GAAW,EAAO,CAAC;QAClC,CAAC;eACI,IAAI,CAAC,KAAK,CAAC,GAAG;IACvB,CAAC,QAAO,CAAC;eACA,GAAG;IACZ,CAAC;AACH,CAAC;SAEQ,OAAO,CAAC,KAAa,EAAE,aAAwB,EAAwB,CAAC;IAC/E,EAA2F,AAA3F,yFAA2F;IAC3F,EAA0B,AAA1B,sBAA0B,AAA1B,EAA0B,CAC1B,EAAE,SAAS,KAAK,MAAK,MAAQ,UAAS,aAAa;IAEnD,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,EAAC,CAAG;WAEvB,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM;AAC9D,CAAC;SAoBuB,UAAU,CAAC,IAAc,EAAE,CAAC;IAClD,OAAO,CAAC,KAAK,CAAC,IAAI;IAClB,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;IAEzB,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI;IAC9B,KAAK,CAAC,MAAM;IAEZ,EAAE,EAAE,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,EAAE,CAAC;QACrC,MAAM,CAAC,IAAI,EAAC,4BAA8B;IAC5C,CAAC;IAED,EAAE,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,EAAC,gDAAkD;IAChE,CAAC;IAED,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,EAAE,GAAG,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YAClC,MAAM,CAAC,IAAI,EAAC,wCAA0C;QACxD,CAAC;QAED,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;YACtB,MAAM,CAAC,IAAI,EAAC,0BAA4B;QAC1C,CAAC;IACH,CAAC;IAED,EAAE,GACC,IAAI,CAAC,MAAM,IACZ,SAAS,CAAC,MAAM,KAAK,CAAC,WACf,IAAI,CAAC,QAAQ,MAAK,MAAQ,KACjC,IAAI,CAAC,KAAK,KAAK,KAAK,EACpB,CAAC;QACD,MAAM,CAAC,IAAI,EACT,wEAA0E;IAE9E,CAAC;IAED,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;QAClB,OAAO,CAAC,KAAK,EAAC,IAAM;aACf,KAAK,CAAC,KAAK,IAAI,MAAM,CAAE,CAAC;YAC3B,OAAO,CAAC,KAAK,EAAC,EAAI,IAAG,KAAK;QAC5B,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,UAAU;QACd,GAAG;YACD,MAAM,EAAE,SAAS;YACjB,SAAS;;;QAEX,cAAc,EAAE,IAAI,CAAC,cAAc;QACnC,UAAU,EAAE,IAAI,CAAC,UAAU;QAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;QAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;;IAGnB,EAAE,EAAE,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;QAClC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;IACzC,CAAC;IAED,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;aACX,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAc,CAAC;YAC1C,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,EAAC,CAAG;YACzB,GAAG,CAAC,GAAG;YACP,GAAG,CAAC,KAAK;YACT,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;gBACb,GAAG,GAAG,GAAG;gBACT,KAAK,GAAG,IAAI;YACd,CAAC,MAAM,CAAC;gBACN,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;gBACxB,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC;YACzC,CAAC;YACD,EAA+C,AAA/C,6CAA+C;YAC/C,GAAG,CAAC,OAAO,GAAG,UAAU;YACxB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,EAAC,CAAG;YAC9B,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;iBAChC,KAAK,EAAE,KAAK,EAAE,OAAO,KAAK,QAAQ,CAAC,OAAO,GAAI,CAAC;gBAClD,EAAE,EAAE,OAAO,CAAC,OAAO,MAAM,SAAS,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;oBAC1D,OAAO,CAAC,OAAO;;gBACjB,CAAC;gBACD,EAAE,EAAE,KAAK,KAAK,SAAS,EAAE,CAAC;oBACxB,OAAO,CAAC,OAAO,IAAI,KAAK;gBAC1B,CAAC,MAAM,CAAC;oBACN,OAAO,GAAG,OAAO,CAAC,OAAO;gBAC3B,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,SAAS;QACT,IAAI,IAAI,IAAI,CAAC,IAAI;QACjB,eAAe,EAAE,IAAI,CAAC,eAAe;QACrC,UAAU,EAAE,IAAI,CAAC,UAAU,IA3Q+B,KAAW;QA4QrE,KAAK,IAAI,IAAI,CAAC,KAAK;QACnB,SAAS,IAAI,IAAI,CAAC,SAAS;QAC3B,eAAe,IAAI,IAAI,CAAC,eAAe;QACvC,gBAAgB,EAAE,OAAO,CAAC,IAAI,CAAC,gBAAgB;QAC/C,KAAK,IAAI,IAAI,CAAC,KAAK;;;QAGnB,UAAU;QACV,UAAU;;AAEd,CAAC"}