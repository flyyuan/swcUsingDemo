{"version":3,"sources":["../../../src/swc/__tests__/options.test.ts"],"sourcesContent":["import type { Options } from \"@swc/core\";\nimport deepmerge from 'deepmerge'\n\nimport parserArgs, { CliOptions, initProgram } from \"../options\";\n\ninterface ParserArgsReturn {\n  swcOptions: Options;\n  cliOptions: CliOptions;\n}\n\nconst createDefaultResult = (): ParserArgsReturn => ({\n  \"cliOptions\": {\n    \"copyFiles\": false,\n    \"deleteDirOnStart\": false,\n    \"extensions\": [\".js\", \".jsx\", \".es6\", \".es\", \".mjs\", \".ts\", \".tsx\"],\n    // @ts-expect-error\n    \"filename\": undefined,\n    \"filenames\": [\"src\"],\n    \"includeDotfiles\": false,\n    // @ts-expect-error\n    \"outDir\": undefined,\n    // @ts-expect-error\n    \"outFile\": undefined,\n    \"quiet\": false,\n    \"sourceMapTarget\": undefined,\n    \"sync\": false,\n    \"watch\": false\n  },\n  \"swcOptions\": {\n    \"configFile\": undefined,\n    \"jsc\": { \"parser\": undefined, \"transform\": {} },\n    \"sourceFileName\": undefined,\n    \"sourceMaps\": undefined,\n    \"sourceRoot\": undefined,\n    \"swcrc\": true\n  }\n})\n\ndescribe('parserArgs', () => {\n  let defaultResult: ParserArgsReturn\n\n  beforeEach(() => {\n    defaultResult = createDefaultResult()\n    initProgram()\n  })\n\n  it(\"minimal args returns default result\", async () => {\n    const args = [\n      'node',\n      '/path/to/node_modules/swc-cli/bin/swc.js',\n      'src'\n    ]\n    const result = await parserArgs(args);\n    expect(result).toEqual(defaultResult);\n  });\n\n  describe('errors', () => {\n    let mockExit: jest.SpyInstance\n    let mockConsoleError: jest.SpyInstance\n\n    beforeAll(() => {\n      //@ts-expect-error\n      mockExit = jest.spyOn(process, 'exit').mockImplementation(() => { });\n      mockConsoleError = jest.spyOn(console, 'error').mockImplementation(() => { });\n    })\n\n    beforeEach(() => {\n      mockExit.mockClear()\n      mockConsoleError.mockClear()\n    })\n\n    afterAll(() => {\n      mockExit.mockRestore()\n      mockConsoleError.mockRestore()\n    })\n\n    it('exits without filenames', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n\n    it('--watch exits without --out-dir', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--watch',\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n\n    it('--watch exits without filenames', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--watch',\n        '--out-dir',\n        'esm'\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(3);\n    })\n\n    it('--out-dir exits with conflicting -out-file', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--out-file',\n        'esm/index.js',\n        '--out-dir',\n        'esm'\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n  })\n\n  describe('--source-maps', () => {\n    it(\"source maps is ambiguous\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--source-maps'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: true } })\n      expect(result).toEqual(expectedOptions);\n    });\n\n    it(\"source maps true\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--source-maps',\n        'true',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: true } })\n      expect(result).toEqual(expectedOptions);\n    });\n\n    it(\"source maps inline\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '-s',\n        'inline',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: 'inline' } })\n      expect(result).toEqual(expectedOptions);\n    });\n  });\n\n  describe('--config', () => {\n    it(\"throws with no config\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '-C',\n      ]\n      expect(() => parserArgs(args)).toThrow();\n    });\n\n    it(\"react development\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"react development and commonjs (two config options)\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true',\n        '-C',\n        'module.type=commonjs',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } },\n        module: { type: 'commonjs' }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"react development and commonjs (comma-separated)\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true,module.type=commonjs',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } },\n        module: { type: 'commonjs' }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"no equals sign\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'no_equals',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        no_equals: true\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n  })\n})\n"],"names":[],"mappings":"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"}