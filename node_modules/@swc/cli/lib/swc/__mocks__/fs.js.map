{"version":3,"sources":["../../../src/swc/__mocks__/fs.ts"],"sourcesContent":["import fs from 'fs';\nimport type { Stats } from \"fs\";\n\n\nexport interface MockHelpers {\n  resetMockStats: () => void;\n  setMockStats: (stats: Record<string, Stats | Error>) => void;\n}\n\nconst fsMock = jest.createMockFromModule<typeof fs & MockHelpers>('fs');\n\nlet mockStats: Record<string, Stats | Error> = {}\n\nfunction setMockStats(stats: Record<string, Stats | Error>) {\n  Object.entries(stats).forEach(([path, stats]) => {\n    mockStats[path] = stats;\n  });\n}\nfunction resetMockStats() {\n  mockStats = {};\n}\n\nexport function stat(path: string, cb: (err?: Error, stats?: Stats) => void) {\n  const result = mockStats[path];\n  if (result instanceof Error) {\n    cb(result, undefined);\n  } else {\n    cb(undefined, result);\n  }\n}\n\nfsMock.setMockStats = setMockStats;\nfsMock.resetMockStats = resetMockStats;\n\nfsMock.stat = stat as typeof fs.stat;\n\nexport default fsMock;"],"names":[],"mappings":";;;;QAsBgB,IAAI,GAAJ,IAAI;;AAbpB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,EAA0B,EAAI;AAEtE,GAAG,CAAC,SAAS;;SAEJ,YAAY,CAAC,KAAoC,EAAE,CAAC;IAC3D,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,GAAG,IAAI,EAAE,MAAK,IAAM,CAAC;QAChD,SAAS,CAAC,IAAI,IAAI,MAAK;IACzB,CAAC;AACH,CAAC;SACQ,cAAc,GAAG,CAAC;IACzB,SAAS;;AACX,CAAC;SAEe,IAAI,CAAC,IAAY,EAAE,EAAwC,EAAE,CAAC;IAC5E,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI;IAC7B,EAAE,EAAE,MAAM,YAAY,KAAK,EAAE,CAAC;QAC5B,EAAE,CAAC,MAAM,EAAE,SAAS;IACtB,CAAC,MAAM,CAAC;QACN,EAAE,CAAC,SAAS,EAAE,MAAM;IACtB,CAAC;AACH,CAAC;AAED,MAAM,CAAC,YAAY,GAAG,YAAY;AAClC,MAAM,CAAC,cAAc,GAAG,cAAc;AAEtC,MAAM,CAAC,IAAI,GAAG,IAAI;eAEH,MAAM"}