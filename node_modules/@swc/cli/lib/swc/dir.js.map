{"version":3,"sources":["../../src/swc/dir.ts"],"sourcesContent":["import slash from \"slash\";\nimport { existsSync, promises } from \"fs\";\nimport { dirname, relative, join } from \"path\";\nimport { CompileStatus } from \"./constants\";\nimport { CliOptions } from \"./options\";\nimport { compile } from \"./util\";\nimport { outputResult } from \"./compile\";\nimport {\n  globSources,\n  isCompilableExtension,\n  slitCompilableAndCopyable,\n  watchSources\n} from './sources'\n\nimport type { Options } from \"@swc/core\";\n\ndeclare module \"fs\" {\n  namespace promises {\n    /**\n     * For node > 14 we want to use rm instead of rmdir\n     * We need to augment node v12 types\n     */\n    function rm(dir: string, option: object): void\n  }\n}\n\nconst {\n  mkdir,\n  rmdir,\n  rm,\n  copyFile,\n  unlink,\n} = promises;\n\nconst cwd = process.cwd();\nconst recursive = { recursive: true }\n\n\n/**\n * Removes the leading directory, including all parent relative paths\n */\nfunction stripComponents(filename: string) {\n  const components = filename.split('/').slice(1);\n  if (!components.length) {\n    return filename;\n  }\n  while (components[0] === '..') {\n    components.shift();\n  }\n  return components.join('/');\n}\n\nfunction getDest(filename: string, outDir: string, ext?: string) {\n  const relativePath = slash(relative(cwd, filename));\n  let base = stripComponents(relativePath);\n  if (ext) {\n    base = base.replace(/\\.\\w*$/, ext);\n  }\n  return join(outDir, base);\n}\n\nasync function handleCompile(filename: string, outDir: string, sync: boolean, swcOptions: Options) {\n  const dest = getDest(filename, outDir, \".js\");\n  const sourceFileName = slash(relative(dirname(dest), filename));\n\n  const options = { ...swcOptions, sourceFileName }\n\n  const result = await compile(\n    filename,\n    options,\n    sync,\n    dest\n  );\n\n  if (result) {\n    await outputResult(result, filename, dest, options);\n    return CompileStatus.Compiled;\n  } else {\n    return CompileStatus.Omitted;\n  }\n}\n\nasync function handleCopy(filename: string, outDir: string) {\n  const dest = getDest(filename, outDir);\n  const dir = dirname(dest);\n\n  console.log(filename)\n  await mkdir(dir, recursive);\n  await copyFile(filename, dest);\n\n  return CompileStatus.Copied;\n}\n\n\nasync function beforeStartCompilation(cliOptions: CliOptions) {\n  const {\n    outDir,\n    deleteDirOnStart\n  } = cliOptions\n\n  if (deleteDirOnStart) {\n    const exists = await existsSync(outDir);\n    if (exists) {\n      rm\n        ? await rm(outDir, recursive)\n        : await rmdir(outDir, recursive)\n    }\n  }\n}\n\nasync function initialCompilation(cliOptions: CliOptions, swcOptions: Options) {\n  const {\n    includeDotfiles,\n    filenames,\n    copyFiles,\n    extensions,\n    outDir,\n    sync,\n    quiet,\n    watch,\n  } = cliOptions;\n\n  const results = new Map<string, CompileStatus>();\n\n  const start = process.hrtime();\n  const sourceFiles = await globSources(filenames, includeDotfiles)\n  const [\n    compilable,\n    copyable\n  ] = slitCompilableAndCopyable(sourceFiles, extensions, copyFiles)\n\n  if (sync) {\n    for (const filename of compilable) {\n      try {\n        const result = await handleCompile(filename, outDir, sync, swcOptions);\n        results.set(filename, result);\n      } catch (err) {\n        console.error(err.message);\n        results.set(filename, CompileStatus.Failed);\n      }\n    }\n    for (const filename of copyable) {\n      try {\n        const result = await handleCopy(filename, outDir);\n        results.set(filename, result);\n      } catch (err) {\n        console.error(err.message);\n        results.set(filename, CompileStatus.Failed);\n      }\n    }\n  } else {\n    await Promise.all([\n      Promise.allSettled(compilable.map(file => handleCompile(file, outDir, sync, swcOptions))),\n      Promise.allSettled(copyable.map(file => handleCopy(file, outDir)))\n    ]).then(([compiled, copied]) => {\n      compiled.forEach((result, index) => {\n        const filename = compilable[index];\n        if (result.status === \"fulfilled\") {\n          results.set(filename, result.value);\n        } else {\n          results.set(filename, CompileStatus.Failed);\n        }\n      });\n\n      copied.forEach((result, index) => {\n        const filename = copyable[index];\n        if (result.status === \"fulfilled\") {\n          results.set(filename, result.value);\n        } else {\n          results.set(filename, CompileStatus.Failed);\n        }\n      });\n    });\n  }\n  const end = process.hrtime(start);\n\n  let failed = 0;\n  let compiled = 0;\n  let copied = 0;\n  for (let [_, status] of results) {\n    switch (status) {\n      case CompileStatus.Compiled:\n        compiled += 1;\n        break;\n      case CompileStatus.Failed:\n        failed += 1;\n        break;\n      case CompileStatus.Copied:\n        copied += 1;\n        break;\n    }\n  }\n\n  if (!quiet && compiled + copied) {\n    let message = \"\";\n    if (compiled) {\n      message += `Successfully compiled: ${compiled} ${compiled > 1 ? 'files' : 'file'}`\n    }\n    if (compiled && copied) {\n      message += \", \";\n    }\n    if (copied) {\n      message += `copied ${copied} ${copied > 1 ? 'files' : 'file'}`;\n    }\n    message += ` with swc (%dms)`;\n\n    console.log(message, (end[1] / 1000000).toFixed(2));\n  }\n\n  if (failed) {\n    console.log(`Failed to compile ${failed} ${failed !== 1 ? \"files\" : \"file\"} with swc.`)\n    if (!watch) {\n      throw new Error(\"Failed to compile\");\n    }\n  }\n}\n\nasync function watchCompilation(cliOptions: CliOptions, swcOptions: Options) {\n  const {\n    includeDotfiles,\n    filenames,\n    copyFiles,\n    extensions,\n    outDir,\n    quiet,\n    sync,\n  } = cliOptions;\n\n  const watcher = await watchSources(filenames, includeDotfiles);\n  watcher.on('ready', () => {\n    if (!quiet) {\n      console.info('Watching for file changes.')\n    }\n  });\n  watcher.on('unlink', async (filename) => {\n    try {\n      if (isCompilableExtension(filename, extensions)) {\n        await unlink(getDest(filename, outDir, \".js\"));\n      } else if (copyFiles) {\n        await unlink(getDest(filename, outDir));\n      }\n    } catch (err) {\n      if (err.code !== 'ENOENT') {\n        console.error(err.stack);\n      }\n    }\n  });\n  for (const type of ['add', 'change']) {\n    watcher.on(type, async (filename) => {\n      if (isCompilableExtension(filename, extensions)) {\n        try {\n          const start = process.hrtime();\n          const result = await handleCompile(filename, outDir, sync, swcOptions);\n          if (!quiet && result === CompileStatus.Compiled) {\n            const end = process.hrtime(start);\n            console.log(`Successfully compiled ${filename} with swc (%dms)`, (end[1] / 1000000).toFixed(2))\n          }\n        } catch (err) {\n          console.error(err.message);\n        }\n      } else if (copyFiles) {\n        try {\n          const start = process.hrtime();\n          const result = await handleCopy(filename, outDir);\n          if (!quiet && result === CompileStatus.Copied) {\n            const end = process.hrtime(start);\n            console.log(`Successfully copied ${filename} with swc (%dms)`, (end[1] / 1000000).toFixed(2))\n          }\n        } catch (err) {\n          console.error(`Failed to copy ${filename}`);\n          console.error(err.message);\n        }\n      }\n    });\n  }\n}\n\nexport default async function dir({\n  cliOptions,\n  swcOptions\n}: {\n  cliOptions: CliOptions;\n  swcOptions: Options;\n}) {\n  const {\n    watch,\n  } = cliOptions;\n\n  await beforeStartCompilation(cliOptions);\n  await initialCompilation(cliOptions, swcOptions);\n\n  if (watch) {\n    await watchCompilation(cliOptions, swcOptions);\n  }\n}\n"],"names":[],"mappings":"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"}